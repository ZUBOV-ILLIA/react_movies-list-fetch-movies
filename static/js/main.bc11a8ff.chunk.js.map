{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","FindMovie","setMovies","useState","query","setQuery","setMovie","movieNotEhist","setMovieNotEhist","sameMovie","setSameMovie","findeMovie","title","fetch","then","response","json","searchMovies","res","Response","htmlFor","type","id","placeholder","value","onChange","event","target","onClick","disabled","some","el","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bc11a8ff.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\" data-cy=\"card-image\">\n\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movie-title\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { searchMovies } from '../../api';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  setMovies: (arg: Movie[]) => void;\n  movies: Movie[];\n}\n\nexport const FindMovie: React.FC<Props> = ({ setMovies, movies }) => {\n  const [query, setQuery] = useState<string>('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [movieNotEhist, setMovieNotEhist] = useState<boolean>(false);\n  const [sameMovie, setSameMovie] = useState<boolean>(false);\n\n  const findeMovie = (title: string) => {\n    searchMovies(title)\n      .then(res => {\n        if (res.Response === 'False') {\n          setMovie(null);\n          setMovieNotEhist(true);\n\n          return null;\n        }\n\n        return setMovie(res);\n      });\n  };\n\n  const addMovieToList = () => {\n    if (!movies.some(el => el.imdbID === movie?.imdbID)) {\n      if (movie) {\n        setMovies([...movies, movie]);\n        setMovie(null);\n        setQuery('');\n      }\n    } else {\n      setSameMovie(true);\n    }\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={`input ${movieNotEhist && 'is-danger'}`}\n              value={query}\n              onChange={event => {\n                setQuery(event.target.value);\n                setMovieNotEhist(false);\n                setSameMovie(false);\n              }}\n            />\n          </div>\n\n          {movieNotEhist && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => {\n                if (query === '') {\n                  return;\n                }\n\n                findeMovie(query);\n              }}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={movieNotEhist}\n              onClick={() => {\n                if (movie) {\n                  addMovieToList();\n                }\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-danger\"\n              onClick={() => {\n                setQuery('');\n                setMovieNotEhist(false);\n                setMovie(null);\n                setSameMovie(false);\n              }}\n            >\n              Clear\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {sameMovie && (\n          <p\n            className=\"has-text-danger mb-5\"\n          >\n            This movie is alredy exist in your library\n          </p>\n        )}\n\n        {movie && <MovieCard movie={movie} />}\n\n      </div>\n    </>\n  );\n};\n","// const BASE_URL = 'http://www.omdbapi.com/?i=tt3896198&apikey=84e5c2a8';\nconst BASE_URL = 'https://www.omdbapi.com/?apikey=84e5c2a8';\n\nexport function searchMovies(title: string): Promise<Movie> {\n  return fetch(`${BASE_URL}&t=${title}`)\n    .then(response => response.json());\n}\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          setMovies={setMovies}\n          movies={movies}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}